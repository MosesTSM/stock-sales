+ function(e) {
    "use strict";

    function n(n) {
        return this.each(function() {
            var t = e(this),
                a = t.data(o);
            if (!a) {
                var d = e.extend({}, i, t.data(), "object" == typeof n && n);
                t.data(o, a = new s(d))
            }
            "toggle" === n && a.toggle()
        })
    }
    var o = "lte.pushmenu",
        i = { collapseScreenSize: 767, expandOnHover: !1, expandTransitionDelay: 200 },
        t = { collapsed: ".sidebar-collapse", open: ".sidebar-open", mainSidebar: ".main-sidebar", contentWrapper: ".content-wrapper", searchInput: ".sidebar-form .form-control", button: '[data-toggle="push-menu"]', mini: ".sidebar-mini", expanded: ".sidebar-expanded-on-hover", layoutFixed: ".fixed" },
        a = { collapsed: "sidebar-collapse", open: "sidebar-open", mini: "sidebar-mini", expanded: "sidebar-expanded-on-hover", expandFeature: "sidebar-mini-expand-feature", layoutFixed: "fixed" },
        s = function(e) { this.options = e, this.init() };
    s.prototype.init = function() {
        (this.options.expandOnHover || e("body").is(t.mini + t.layoutFixed)) && (this.expandOnHover(), e("body").addClass(a.expandFeature)), e(t.contentWrapper).click(function() { e(window).width() <= this.options.collapseScreenSize && e("body").hasClass(a.open) && this.close() }.bind(this)), e(t.searchInput).click(function(e) { e.stopPropagation() })
    }, s.prototype.toggle = function() {
        var n = e(window).width(),
            o = !e("body").hasClass(a.collapsed);
        n <= this.options.collapseScreenSize && (o = e("body").hasClass(a.open)), o ? this.close() : this.open()
    }, s.prototype.expandOnHover = function() { e(t.mainSidebar).hover(function() { e("body").is(t.mini + t.collapsed) && e(window).width() > this.options.collapseScreenSize && this.expand() }.bind(this), function() { e("body").is(t.expanded) && this.collapse() }.bind(this)) }, s.prototype.expand = function() { setTimeout(function() { e("body").removeClass(a.collapsed).addClass(a.expanded) }, this.options.expandTransitionDelay) }, s.prototype.collapse = function() { setTimeout(function() { e("body").removeClass(a.expanded).addClass(a.collapsed) }, this.options.expandTransitionDelay) };
    var d = e.fn.pushMenu;
    e.fn.pushMenu = n, e.fn.pushMenu.Constructor = s, e.fn.pushMenu.noConflict = function() { return e.fn.pushMenu = d, this }, e(document).on("click", t.button, function(o) { o.preventDefault(), n.call(e(this), "toggle") }), e(window).on("load", function() { n.call(e(t.button)) })
}(jQuery);